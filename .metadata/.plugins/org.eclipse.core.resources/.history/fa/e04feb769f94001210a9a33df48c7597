package Graph;

import java.util.LinkedList;
import java.util.Queue;

public class BreadthFirstPaths {
	private boolean[] marked;
	private int [] edgeTo;
	private final int s;
	
	public BreadthFirstPaths(Graph G, int s){
		marked = new boolean[G.V()];
		edgeTo = new int[G.V()];
		this.s = s;
		bfs(G,s);
	}
	
	private void bfs(Graph G, int s){
		Queue<Integer> q = new LinkedList<Integer>();
		marked[s] = true;
		q.offer(s);
		while(!q.isEmpty()){
			int v = q.poll();
			for(int w : G.adj(v)){
				
			}
		}
	}
}
