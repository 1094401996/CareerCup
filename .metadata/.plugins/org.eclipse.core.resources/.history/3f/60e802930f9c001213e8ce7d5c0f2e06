/**
 * CareerCup 11.6
 * Given a matrix in which each row and each column is sorted, write a method to find an 
 * element in it.
 * 
 * assumption : each row and column is in increasing order
 * 
 * method: 
 * if the start of column is greater than the element, then x is to the left of the column
 * if the end of column  is less than the element , then x is to the right of the column
 * if the start of the row is greater than the element, the x is above the row
 * if the end of the row is less than the element , then x is below the row
 */
package elevendot6;

public class FindElementInSoredMatrix {
	
	public static void main(String[] args){
		int[][] matrix= {{15,20,40,85},{20,35,80,95}
		,{30,55,95,105},{40,80,100,120}};
		Result r = new Result();
		r.column = matrix[0].length - 1;
		r.row = 0;
		int target = 20;
		findElement(matrix,target, r);
		if(r.isContained){
			System.out.println(matrix[r.row][r.column]);
		}else{
			System.out.println(No such element);
			
		}
	}
	public static void findElement(int[][]matrix, int target, Result r){
		int row = 0;
		int column = matrix[0].length - 1;
		while(row <matrix.length && column >=0){
			if(matrix[row][column] == target){
				r.column = column;
				r.row = row;
				r.isContained = true;
			}else if(matrix[row][column] >target){
				column--;
			}else{
				row++;
			}
		}
	}
}

class Result{
	int row ;
	int column;
	boolean isContained = false;
}


