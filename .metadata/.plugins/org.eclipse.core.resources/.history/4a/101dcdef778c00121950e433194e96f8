package threedot7;

import java.util.LinkedList;
class Animal{
	String name;
	int priority;
	Animal(String name){
		this.name = name;
	}
	void setPriority(int priority){
		this.priority = priority;
	}
	int getPriority(){
		return priority;
	}
	
}
 class Dog extends Animal{
	 Dog(String name){
		super(name);
	}
}
 
class Cat extends Animal{
	 Cat(String name){
		 super(name);
	 }
}

public class AnimalShelter {
	private LinkedList<Dog> ld = new LinkedList<Dog>();
	private LinkedList<Cat> lc = new LinkedList<Cat>();
	private int priority = 0;
	
	public void enqueue(Animal a){
		if( a instanceof Dog){
			a.setPriority(this.priority);
			ld.addLast((Dog)a);
			this.priority++;
			
		}
		if(a instanceof Cat){
			a.setPriority(this.priority);
			lc.addLast((Cat)a);
			this.priority++;
		}
	}
	public Cat dequeueCat() throws Exception{
		if(lc.isEmpty()){
			throw new Exception("no cat");
		}
		return lc.removeFirst();
	}
	public Dog dequeueDog() throws Exception{
		if(ld.isEmpty()){
			throw new Exception("no dog");
		}
		return ld.removeFirst();
	}
	
	public Animal dequeueAny() throws Exception{
		if(ld.isEmpty()){
			return this.dequeueCat();
		}else if(lc.isEmpty()){
			return this.dequeueDog();
		}else{
			Cat c = lc.peekFirst();
			Dog d = ld.peekFirst();
			return c.getPriority() > d.getPriority() ? d : c;
		}
	}
	
	public static void main(String[] args){
		Dog d1 = new Dog("d1");
		Dog d2Dog = new Dog("d2");
		
	}
	
}

